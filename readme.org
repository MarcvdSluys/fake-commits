#+title: fake-commits

This script creates fake commits.  It can be used to e.g. confuse GitHub's Contribution Calendar, which is a
privacy issue and cannot be hidden ([[https://github.com/isaacs/github/issues/142][1]], [[https://github.com/orgs/community/discussions/4098][2]]) or just impress your (rather naive) employer with your 10.000
commits a day.

* Usage strategies
I can imagine at least two strategies:
1) swamp your stats with ~100 commits per day for a number of years in a public repo to mask your real commits;
   - it looks like the GitHub calendar may not swallow this...
2) fill up your gaps (e.g. holidays that you don't want to show to the whole world) with a 'normal' number of
   commits in a private repo and share anonymised commits with the world by:
   1. going to your profile page;
   2. selecting Contribution settings just above your Contributions calendar;
   3. ticking Private contributions.


* Dependencies
#+begin_src bash
  pip install argcomplete, astrotool, colored_traceback, GitPython, numpy, python_dateutil, sluyspy
#+end_src


* Setup your repo
In order to create fake commits we need some changes to commit, and for that we need (in this case) two files.
Make them as small as possible and non-identical, call them ~file1~ and ~file2~ and add them to your fake repo:
#+begin_src bash
  mkdir fake-repo && cd fake-repo
  git init
  
  echo 1 > file1
  echo 2 > file2
  git add file1 file2
#+end_src
The changes between commits will consist of swapping the two files (which is why they shan't be identical).

Then download ~fake-commits.py~ into your directory and make it executable.


* Usage syntax
#+begin_src bash
  # Get it wrong:
  ./fake-commits.py

  # Get some help:
  ./fake-commits.py -h

  # You went on holiday for a week and want to fill the gap with a moderate number of commits (~4 per day):
  ./fake-commits.py 4 -f 2001-03-10 -l 2001-03-17            # See what would happen
  ./fake-commits.py 4 -f 2001-03-10 -l 2001-03-17   -v       # See what would happen in more detail
  ./fake-commits.py 4 -f 2001-03-10 -l 2001-03-17   -L       # Go LIVE and actually create the COMMITS

  # If you think you should have committed a bit more (another ~1 per day):
  ./fake-commits.py 1 -f 2001-03-10 -l 2001-03-17            # See what would happen

  # If you're a maniac:
  ./fake-commits.py 100 -f 2001-03-10 -l 2001-03-17  -v      # See what would happen in detail

  # If you're a maniac, but more variably so:
  ./fake-commits.py 100 -f 2001-03-10 -l 2001-03-17  -v -r5  # See what would happen in detail
#+end_src

* Licence
This is free software: you can redistribute it and/or modify it under the terms of the European Union Public
Licence 1.2 (EUPL 1.2).  This software is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
EU Public Licence for more details.  You should have received a copy of the European Union Public Licence
along with this code.  If not, see <https://www.eupl.eu/1.2/en/>.

